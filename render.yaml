services:
  # Redis Service
  - type: redis
    name: ceo-app-redis
    ipAllowList: [] # Allow all IPs, or specify your IP ranges
    plan: starter # or free, standard, pro
    
  # Web Service (API Backend)
  - type: web
    name: ceo-app-backend
    env: node
    plan: starter # or free, standard, pro
    buildCommand: npm install && npm run build:prod
    startCommand: npm start
    envVars:
      - key: NODE_ENV
        value: production
      - key: PORT
        value: 10000
      - key: HOST
        value: 0.0.0.0
      - key: DATABASE_URL
        value: postgresql://postgres:ThisSuperColl@database-1.cmze6s8yeur2.us-east-1.rds.amazonaws.com:5432/postgres
      - key: DB_POOL_MIN
        value: 2
      - key: DB_POOL_MAX
        value: 10
      - key: REDIS_URL
        fromService:
          name: ceo-app-redis
          type: redis
          property: connectionString
      - key: JWT_SECRET
        generateValue: true # Render will generate a secure secret
      - key: JWT_REFRESH_SECRET  
        generateValue: true # Render will generate a secure secret
      - key: JWT_EXPIRES_IN
        value: 15m
      - key: JWT_REFRESH_EXPIRES_IN
        value: 7d
      - key: API_PREFIX
        value: /api
      - key: API_VERSION
        value: v1
      - key: CORS_ORIGIN
        value: "*" # Update this with your actual frontend URL
      - key: RATE_LIMIT_MAX
        value: 1000
      - key: BCRYPT_ROUNDS
        value: 12
      - key: MAX_LOGIN_ATTEMPTS
        value: 5
      - key: LOCKOUT_DURATION
        value: 15m
      - key: CACHE_TTL_SHORT
        value: 5m
      - key: CACHE_TTL_MEDIUM
        value: 1h
      - key: CACHE_TTL_LONG
        value: 24h
      - key: QUERY_TIMEOUT
        value: 30s
      - key: REQUEST_TIMEOUT
        value: 30s
      - key: LOG_LEVEL
        value: info
      - key: LOG_FORMAT
        value: json
      - key: SEED_DATABASE
        value: false
      - key: DEBUG_SQL
        value: false
      - key: DEBUG_WEBSOCKET
        value: false
    healthCheckPath: /health